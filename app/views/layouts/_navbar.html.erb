<%
  Dir.glob(Rails.root.join('app/models/*')).each do |model_class|
    is_directory = File.directory? model_class
    next if is_directory

    require model_class
  end
%>

<div class="navbar navbar-<%= navbar_class %> navbar-fixed-top">

  <div class="container-fluid">

    <div class="navbar-header">

      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-inverse-collapse" style="float: left; margin-right: 0;">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>

      <%= link_to root_path, class: "navbar-brand" do %>
        Julia Observer
      <% end %>

      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-inverse-collapse" style="padding: 0; margin: 0;">
        <%= fa_icon "search lg", class: "cs-logo-icon navbar-toggle" %>
      </button>

    </div>

    <div class="navbar-collapse collapse navbar-inverse-collapse">

      <%= form_tag root_path, class: "navbar-form navbar-left", method: :get do %>
        <div class="form-group">
          <%= autocomplete_field_tag :search, params[:search], autocomplete_package_name_packages_path, class: "form-control col-sm-8", placeholder: "Search" %>
        </div>
      <% end %>

      <ul class="nav navbar-nav navbar-right">

        <%
          is_package_path = controller_name == 'packages'
          is_error_path = controller_name == 'errors'
          is_root_path = is_package_path && action_name == 'index'
        %>

        <li class="<%= is_root_path ? 'active' : '' %>">
          <%= link_to 'Home', root_path %>
        </li>

        <% unless is_root_path %>

          <% unless is_package_path or is_error_path %>

            <li class="<%= (action_name == 'index') ? 'active' : '' %>">
              <% class_index_name = controller_name.titleize %>
              <% class_index_name.sub! ' Items', '' %>
              <%= link_to class_index_name, send("#{controller_name}_path") %>
            </li>

          <% end %>

          <% unless action_name == 'index' %>

            <li class="active">
              <% params_id = params[:id] %>

              <%
                params_id = params_id.titleize \
                  if controller_name == 'logs'
              %>

              <% case action_name %>
              <% when 'show' %>
                <%= link_to truncate(params_id, length: 25), send("#{controller_name.singularize}_path"), @model %>
              <% when 'edit' %>
                <%= link_to truncate(params_id, length: 25), send("edit_#{controller_name.singularize}_path"), @model %>
              <% when 'new' %>
                <%= link_to 'New', send("new_#{controller_name.singularize}_path") %>
              <% else %>
                <a>ruh roh</a>
              <% end %>
            </li>

          <% end %>

        <% end %>

        <li class="dropdown">
          <a href="javascript:void(0)" data-target="#" class="dropdown-toggle" data-toggle="dropdown">
            <b class="caret"></b></a>
          <ul class="dropdown-menu">

            <li>
              <a href="https://github.com/djsegal/julia_observer" target="_blank">
                Github Page
              </a>
            </li>

            <li>
              <%=
                link_to 'Clear Cookies', \
                  settings_path(clear_cookies: true), \
                  data: { confirm: 'Are you sure?' }
              %>
            </li>

            <li>
              <a href="#" data-toggle="modal" data-target=".modal">
                Settings
              </a>
            </li>

            <li class="divider"></li>

            <li class="dropdown-header">Models</li>
              <% ApplicationRecord.descendants.each do |model_class| %>

                <%
                  has_name = model_class.attribute_names.include? "name"
                  next unless has_name

                  model_name = model_class.name.pluralize.underscore
                  sti_classes = %w[ news_items ]

                  if sti_classes.any? { |c| model_name.include? c }
                    next unless sti_classes.include? model_name
                  end

                  cur_class_name = model_class.name.pluralize.underscore

                  cur_class_title = cur_class_name.titleize
                  cur_class_title = "RSS #{cur_class_title}" \
                    if cur_class_name == 'feeds'
                %>

                <li>
                  <%= link_to cur_class_title, send("#{cur_class_name.underscore}_path") %>
                </li>

              <% end %>
          </ul>
        </li>
      </ul>

    </div>

  </div>

</div>
